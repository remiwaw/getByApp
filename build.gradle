// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "org.jlleitschuh.gradle.ktlint-idea"
apply plugin: "io.gitlab.arturbosch.detekt"

buildscript {
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath Dependencies.toolsDetekt
		classpath Dependencies.toolsKtlint
		classpath Dependencies.toolsGradle
		classpath Dependencies.toolsKotlin
		classpath Dependencies.navigationSafeArgs // TODO should it be here?
		classpath Dependencies.toolsGoogleServices
	}

}

allprojects {
    repositories {
		maven { url 'https://jitpack.io' }
		google()
        jcenter()
    }
}

subprojects {
	afterEvaluate { project ->
		if (project.hasProperty('android')) {
//			apply plugin: "com.github.ben-manes.versions"

			android {
				buildToolsVersion Config.buildTools
				compileSdkVersion Config.compileSdk

				defaultConfig {
					minSdkVersion Config.minSdk
					targetSdkVersion Config.targetSdk
					testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
				}

				compileOptions {
					sourceCompatibility Config.javaVersion
					targetCompatibility Config.javaVersion
				}

				dataBinding {
					enabled true
				}
				kotlinOptions {
					jvmTarget = "1.8"
				}

				packagingOptions {
					exclude 'META-INF/DEPENDENCIES'
					exclude 'META-INF/LICENSE'
					exclude 'META-INF/LICENSE.txt'
					exclude 'META-INF/license.txt'
					exclude 'META-INF/NOTICE'
					exclude 'META-INF/NOTICE.txt'
					exclude 'META-INF/notice.txt'
					exclude 'META-INF/ASL2.0'
					exclude("META-INF/*.kotlin_module")
				}
			}
		}
	}
}

detekt {
    failFast = true // fail build on any finding
    buildUponDefaultConfig = true // preconfigure defaults
    config = files("$projectDir/config/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = true // similar to the console output, contains issue signature to manually edit baseline files
    }
}

// TODO activate detekt
//tasks {
//    withType<Detekt> {
//        // Target version of the generated JVM bytecode. It is used for type resolution.
//        this.jvmTarget = "1.8"
//    }
//}

task clean(type: Delete) {
    delete rootProject.buildDir
}
