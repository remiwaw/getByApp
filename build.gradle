// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "org.jlleitschuh.gradle.ktlint-idea"
apply plugin: "io.gitlab.arturbosch.detekt"

buildscript {
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath BuildDependencies.toolsDetekt
		classpath BuildDependencies.toolsKtlint
		classpath BuildDependencies.toolsGradle
		classpath BuildDependencies.toolsKotlin
		classpath BuildDependencies.navigationSafeArgs // TODO should it be here?
		classpath BuildDependencies.toolsGoogleServices
		classpath BuildDependencies.gradleVersionsPlugin
	}
}

allprojects {
    repositories {
		maven { url 'https://jitpack.io' }
		google()
        jcenter()
    }
}

subprojects { project ->
		def isAndroidModule = project.file('src/main/AndroidManifest.xml').exists()

		if (isAndroidModule)
			apply from: rootProject.file('moduleAndroid.gradle')
		else
			apply from: rootProject.file('moduleJava.gradle')

		apply plugin: 'kotlin-kapt'

		kapt {
			correctErrorTypes = true
		}
}


task clean(type: Delete) {
	delete rootProject.buildDir
}

detekt {
    failFast = true // fail build on any finding
    buildUponDefaultConfig = true // preconfigure defaults
    config = files("$projectDir/config/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = true // similar to the console output, contains issue signature to manually edit baseline files
    }
}

// TODO activate detekt and ktlint
//tasks {
//    withType<Detekt> {
//        // Target version of the generated JVM bytecode. It is used for type resolution.
//        this.jvmTarget = "1.8"
//    }
//}
